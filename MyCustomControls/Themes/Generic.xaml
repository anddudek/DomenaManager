<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MyCustomControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style TargetType="{x:Type local:MetroButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="62" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="150" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <materialDesign:PackIcon x:Name="MDTIcon" Kind="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MetroButton}, Path=MDTIcon}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                 Width="32" Height="32"                                                 
                                                 />
                        <TextBlock x:Name="MDTText"  Grid.Row="1" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MetroButton}, Path=MDTText}" VerticalAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MetroButtonExpand}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="62" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="150" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2,3*" />
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="0,7*" />
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon x:Name="MDTIcon" Kind="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MetroButtonExpand}, Path=MDTIcon}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                 Width="32" Height="32"                                                 
                                                 />
                        <TextBlock x:Name="MDTText"  Grid.Row="1" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MetroButtonExpand}, Path=MDTText}" VerticalAlignment="Center"/>
                        <GridSplitter Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Stretch" Background="{Binding ElementName=MDTIcon, Path=Foreground}"/>
                        <materialDesign:PackIcon Kind="ChevronDown" Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center"  HorizontalAlignment="Stretch" Width="32" Height="32" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:ActionButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="80" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="80" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter x:Name="bg" Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="11" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <materialDesign:PackIcon x:Name="MDTIcon" Kind="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ActionButton}, Path=MDTIcon}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                 Width="40" Height="40"                                                 
                                                 />
                        <TextBlock x:Name="MDTText"  Grid.Row="1" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ActionButton}, Path=MDTText}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ActionButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Red" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="#8BC34A" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#8BC34A" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Background" Value="#8BC34A" />
            </Trigger>
        </Style.Triggers>
        
    </Style>
</ResourceDictionary>
