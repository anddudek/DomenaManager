<UserControl x:Class="DomenaManager.Pages.SettlementPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:Helpers="clr-namespace:DomenaManager.Helpers"      
      xmlns:MyControls="clr-namespace:MyCustomControls;assembly=MyCustomControls"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:dd="urn:gong-wpf-dragdrop"
      mc:Ignorable="d"
      d:DesignHeight="1500" d:DesignWidth="600">
    <UserControl.Resources>
        <Helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <Helpers:GuidToInvoiceCategoryNameMultiConverter x:Key="GuidToCategoryConverter"/>
        <Helpers:MetersGroupHeaderConverter x:Key="FooterConverter"/>
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <StackPanel>
                            <TextBlock Text="{Binding ApartmentO.ApartmentNumber, StringFormat= Mieszkanie nr.: {0} ;}" />
                            <TextBlock Text="{Binding OwnerO.OwnerName, StringFormat= Właściciel: {0}.}" />
                            <ItemsPresenter/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible" Background="White">
        <Grid Background="#FFFFFF">
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="10">
            
            <ComboBox materialDesign:HintAssist.Hint="Budynek" Margin="15"
	        Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  IsEditable="True" DisplayMemberPath="Name"
            SelectedItem="{Binding SelectedBuildingName}"  VerticalAlignment="Center" >
                <ComboBox.Text>
                    <Binding Path="SelectedBuildingValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <Helpers:EmptyStringValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.Text>
                <ComboBox.ItemsSource>
                    <Binding Path="BuildingNames"  Mode="OneWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <Helpers:EmptyStringValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.ItemsSource>
            </ComboBox>

            <TextBox IsReadOnly="True" TextWrapping="WrapWithOverflow" Text="{Binding SelectedBuildingAddress}" HorizontalContentAlignment="Left" Margin="10"/>

            <Label Content="Okres rozliczenia:" HorizontalAlignment="Left" Margin="15"/>

            <DockPanel LastChildFill="False">                
                <DatePicker DockPanel.Dock="Left" Width="200"
                    SelectedDate="{Binding SettlementFrom}"
                    VerticalAlignment="Center" Margin="15,0,30,0" Language="pl-PL" 
                    materialDesign:HintAssist.Hint="Początek" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                <DatePicker DockPanel.Dock="Right" Width="200"
                    SelectedDate="{Binding SettlementTo}"
                    VerticalAlignment="Center" Margin="30,0,15,0" Language="pl-PL" 
                    materialDesign:HintAssist.Hint="Koniec" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
            </DockPanel>

            <ComboBox materialDesign:HintAssist.Hint="Kategorie faktur:" Margin="15"
	        Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  IsEditable="True" DisplayMemberPath="CategoryName"
            SelectedItem="{Binding SelectedInvoiceCategoryName}"  VerticalAlignment="Center" >
                <ComboBox.Text>
                    <Binding Path="SelectedInvoiceCategoryValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <!--<Binding.ValidationRules>
                                <Helpers:EmptyStringValidationRule/>
                            </Binding.ValidationRules>-->
                        </Binding>
                </ComboBox.Text>
                <ComboBox.ItemsSource>
                    <Binding Path="InvoiceCategories"  Mode="OneWay" UpdateSourceTrigger="PropertyChanged">
                        <!--<Binding.ValidationRules>
                            <Helpers:EmptyStringValidationRule/>
                        </Binding.ValidationRules>-->
                    </Binding>
                </ComboBox.ItemsSource>
            </ComboBox>

            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <Label Content="Rozliczane:" Margin="5,0,0,0"/>
                    <DataGrid ItemsSource="{Binding SettledInvoices}" AutoGenerateColumns="False" IsReadOnly="True" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
                                  dd:DragDrop.IsDragSource="True" MinHeight="300" MinWidth="250" Margin="10,0,15,5" BorderThickness="1" BorderBrush="Gray"
                                  dd:DragDrop.IsDropTarget="True" x:Name="SettledInvoicesDG">
                        <DataGrid.Columns>
                                <DataGridTextColumn Header="Data" Binding="{Binding InvoiceDate, StringFormat=d, ConverterCulture=pl-PL}" Width="auto" FontSize="14"/>
                                <DataGridTextColumn Header="Kwota" Binding="{Binding CostAmount, StringFormat={}{0} zł}" Width="auto" FontSize="14"/>
                                <DataGridTextColumn Header="Kategoria" Width="auto" FontSize="14">
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource GuidToCategoryConverter}" >
                                            <Binding Path="InvoiceCategoryId"/>
                                            <Binding Path="InvoiceCategories" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Numer" Binding="{Binding InvoiceNumber}" Width="auto" FontSize="14"/>
                                <DataGridTextColumn Header="Kontrahent" Binding="{Binding ContractorName}" Width="auto" FontSize="14"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>


                <StackPanel>
                    <Label Content="Dostępne:" Margin="15,0,0,0"/>
                    <DataGrid ItemsSource="{Binding AvailableInvoices}" AutoGenerateColumns="False" IsReadOnly="True" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
                              dd:DragDrop.IsDragSource="True" MinHeight="300" MinWidth="250" Margin="15,0,10,5" BorderThickness="1" BorderBrush="Gray"
                              dd:DragDrop.IsDropTarget="True" x:Name="AvailableInvoicesDG">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Data" Binding="{Binding InvoiceDate, StringFormat=d, ConverterCulture=pl-PL}" Width="auto" FontSize="14"/>
                                <DataGridTextColumn Header="Kwota" Binding="{Binding CostAmount, StringFormat={}{0} zł}" Width="auto" FontSize="14"/>
                                <DataGridTextColumn Header="Kategoria" Width="auto" FontSize="14">
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource GuidToCategoryConverter}" >
                                            <Binding Path="InvoiceCategoryId"/>
                                            <Binding Path="InvoiceCategories" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Numer" Binding="{Binding InvoiceNumber}" Width="auto" FontSize="14"/>
                                <DataGridTextColumn Header="Kontrahent" Binding="{Binding ContractorName}" Width="auto" FontSize="14"/>
                            </DataGrid.Columns>
                        </DataGrid>
                </StackPanel>
            </StackPanel>
            
            <ComboBox materialDesign:HintAssist.Hint="Kategorie zaliczek:" Margin="15"
	        Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  IsEditable="True" DisplayMemberPath="CategoryName"
            SelectedItem="{Binding SelectedChargeCategoryName}"  VerticalAlignment="Center" >
                <ComboBox.Text>
                    <Binding Path="SelectedChargeCategoryValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <!--<Binding.ValidationRules>
                                <Helpers:EmptyStringValidationRule/>
                            </Binding.ValidationRules>-->
                        </Binding>
                </ComboBox.Text>
                <ComboBox.ItemsSource>
                    <Binding Path="ChargeCategories"  Mode="OneWay" UpdateSourceTrigger="PropertyChanged">
                        <!--<Binding.ValidationRules>
                            <Helpers:EmptyStringValidationRule/>
                        </Binding.ValidationRules>-->
                    </Binding>
                </ComboBox.ItemsSource>
            </ComboBox>

            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <Label Content="Rozliczane:" Margin="5,0,0,0"/>
                    <DataGrid ItemsSource="{Binding SettleChargeCategories}" AutoGenerateColumns="False" IsReadOnly="True" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
                                  dd:DragDrop.IsDragSource="True" MinHeight="200" MinWidth="250" Margin="10,0,15,5" BorderThickness="1" BorderBrush="Gray"
                                  dd:DragDrop.IsDropTarget="True" Width="{Binding Path=ActualWidth, ElementName=SettledInvoicesDG}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Nazwa" Binding="{Binding CategoryName}" Width="auto" FontSize="14"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>


                <StackPanel>
                    <Label Content="Dostępne:" Margin="15,0,0,0"/>
                    <DataGrid ItemsSource="{Binding AvailableChargeCategories}" AutoGenerateColumns="False" IsReadOnly="True" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
                              dd:DragDrop.IsDragSource="True" MinHeight="200" MinWidth="250" Margin="15,0,10,5" BorderThickness="1" BorderBrush="Gray"
                              dd:DragDrop.IsDropTarget="True" Width="{Binding Path=ActualWidth, ElementName=AvailableInvoicesDG}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Nazwa" Binding="{Binding CategoryName}" Width="auto" FontSize="14"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </StackPanel>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60" />
                </Grid.ColumnDefinitions>
                
                <ComboBox materialDesign:HintAssist.Hint="Rozliczane jako:" Margin="15"
	        Style="{StaticResource MaterialDesignFloatingHintComboBox}" 
                  IsEditable="True" DisplayMemberPath="CategoryName"
            SelectedItem="{Binding SettlementCategoryName}"  VerticalAlignment="Center" >
                    <ComboBox.Text>
                        <Binding Path="SettlementCategoryValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <!--<Binding.ValidationRules>
                                <Helpers:EmptyStringValidationRule/>
                            </Binding.ValidationRules>-->
                            </Binding>
                    </ComboBox.Text>
                    <ComboBox.ItemsSource>
                        <Binding Path="SettlementCategories"  Mode="OneWay" UpdateSourceTrigger="PropertyChanged">
                            <!--<Binding.ValidationRules>
                                <Helpers:EmptyStringValidationRule/>
                            </Binding.ValidationRules>-->
                        </Binding>
                    </ComboBox.ItemsSource>
                </ComboBox>
                <Button Grid.Column="1" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding AddNewCategory}" HorizontalAlignment="Center" DockPanel.Dock="Right">
                    <ContentControl>
                        <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </ContentControl>
                </Button>
            </Grid>

            <Label Content="Sposób rozliczania:" HorizontalAlignment="Left" Margin="15,0,0,5"/>
                <RadioButton IsChecked="{Binding Path=SettlementMethod, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static Helpers:SettlementMethodsEnum.PER_AREA}}" Content="Według powierzchni" Margin="10,0,0,0"/>
                <RadioButton IsChecked="{Binding Path=SettlementMethod, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static Helpers:SettlementMethodsEnum.PER_APARTMENT}}" Content="Według lokali" Margin="10,5,0,0"/>
                <RadioButton IsChecked="{Binding Path=SettlementMethod, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static Helpers:SettlementMethodsEnum.PER_METERS}}" Content="Według liczników" Margin="10,5,0,5"/>

                <ComboBox materialDesign:HintAssist.Hint="Nazwa licznika:" Margin="15,0,15,0"
	        Style="{StaticResource MaterialDesignFloatingHintComboBox}" 
                  IsEditable="True" DisplayMemberPath="Name" Visibility="{Binding IsPerMetersSettlement}"
            SelectedItem="{Binding SelectedMeterName}"  VerticalAlignment="Center" >
                    <ComboBox.Text>
                        <Binding Path="SelectedMeterValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        </Binding>
                    </ComboBox.Text>
                    <ComboBox.ItemsSource>
                        <Binding Path="MetersCollection"  Mode="OneWay" UpdateSourceTrigger="PropertyChanged">
                        </Binding>
                    </ComboBox.ItemsSource>
                </ComboBox>

                <Label Content="Licznik główny: " Margin="0,15,0,0"/>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Ostatnie wskazanie:" Width="120"/>
                    <TextBox Margin="5,0,0,0" Width="60" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <TextBox.Text>
                            <Binding Path="MeterLastMeasure" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <Helpers:StringToDoubleValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Aktualne wskazanie:" Width="120"/>
                    <TextBox Margin="5,0,0,0" Width="60" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <TextBox.Text>
                            <Binding Path="MeterCurrentMeasure" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <Helpers:StringToDoubleValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
            </StackPanel>

            <DataGrid Visibility="{Binding IsPerMetersSettlement}" MinHeight="100" Margin="10" ItemsSource="{Binding ApartmentMetersCollection}" AutoGenerateColumns="False" BorderThickness="1" BorderBrush="Gray" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Nazwa licznika" Binding="{Binding Meter.Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Licznik zlegalizowany" Binding="{Helpers:SwitchBinding IsMeterLegalized, Tak, Nie}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Ostatnie wskazanie" Binding="{Binding LastMeasure}" IsReadOnly="False"/>
                        <DataGridTextColumn Header="Aktualne wskazanie" Binding="{Binding CurrentMeasure}" IsReadOnly="False"/>
                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <StackPanel Background="#87B04D" >
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=Items, Converter={StaticResource FooterConverter}, ConverterParameter=ApartmentNumber, StringFormat={}Mieszkanie nr {0}}" Margin="10,0,0,0" Height="25" FontWeight="Bold" VerticalAlignment="Center" FontSize="14"/>
                                                        <TextBlock Text="{Binding Path=Items, Converter={StaticResource FooterConverter}, ConverterParameter=Owner, StringFormat={}\, właściciel: {0}}" Height="25" FontWeight="Bold" VerticalAlignment="Center" FontSize="14"/>
                                                    </StackPanel>
                                                    <ItemsPresenter />
                                                </StackPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>

                <StackPanel Orientation="Horizontal">
                    <Label Content="{Binding MetersDiffSum, StringFormat={}Suma wskazań: {0}}" />

                    <Button Grid.Column="1" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding RefreshMeterDiffSum}" HorizontalAlignment="Center" DockPanel.Dock="Right">
                        <ContentControl>
                            <materialDesign:PackIcon Kind="Refresh" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </ContentControl>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <Label Content="Koszty stałe: "/>
                    <TextBox Margin="10,0,0,0">
                        <TextBox.Text>
                            <Binding Path="ConstantPeriod" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                <Helpers:StringToDoubleValidationRule/>
                            </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Label Content="%"/>
                    <Label Content="{Binding VariablePeriod}" ContentStringFormat="Koszty zmienne: {0}%" Margin="10,0,0,0" />
                </StackPanel>
            
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Content="Podsumowanie" Command="{Binding SettlementSummary}"  Margin="10" DockPanel.Dock="Left" Width="200"/>
                

        </StackPanel>
    </Grid>
    </ScrollViewer>
</UserControl>
